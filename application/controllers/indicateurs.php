<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Indicateurs extends CI_Controller {	function _remap($method)	{		$data=array();			if(isset($_SESSION['langue'])){ // On check si la langue est en session, ce qui veut dire que l'utilisateur a choisit la langue via les flags			$data['lang']=$_SESSION['langue'];			}elseif($_SESSION['session-bihrdy']['infoUser']['LANG']!=""){ // On check si l'utilisateur à une langue par défaut dans son profil			$data['lang']=$_SESSION['session-bihrdy']['infoUser']['LANG'];		}else{ // Sinon on check la langue de son naviateur			$lang = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'], 0, 2);			// On fait une condition pour gérer si la langue du navigateur est dans une autre langue qu'anglais ou francais.			if($lang!="fr"){				$data['lang']="en";			}else{				$data['lang']=$lang;			}		}		// On load les ressources de langue générales		$this->lang->load('general',$data['lang']);		$this->lang->load('indicateurs',$data['lang']);		//On vérifie si l'utilisateur est connecté		if($_SESSION['session-bihrdy']['acces']=="ok")		{				//On load le model donnees			$this->load->model('indicateurs_model');			if($this->main_model->isAccessModules('indicateurs')){				//Alors on appelle la methode appelé				$this->$method($data);						}else{				redirect(base_url(),'location');				}		}else{						// Redirection page de login			redirect(base_url(),'location');						}	}	/**********************************************************	 *   				Indicateur de paie     	   			  *	 **********************************************************/	function liste_indicateurs_paie($data){		//Verification d'accès au module indicateurs de paue		if(!$this->main_model->isAccessModules('paie')){			redirect(base_url(),'location');			}		if($this->uri->segment(3)=="supprimer_indicateur_paie" && is_numeric($this->uri->segment(4))){			$this->indicateurs_model->supprimerIndicateurPaie($this->uri->segment(4));			redirect(base_url().'indicateurs/liste_indicateurs_paie/delok','location');		}		// On appelle la liste des indicateurs de paie		$data['listeIndicateursPaie'] = $this->indicateurs_model->listeIndicateursPaie();		// On check les messages pour les notification : indicateur bien supprimé		if($this->uri->segment(3)!=""){			$data['msg']=$this->uri->segment(3);		}		$this->load->view('indicateurs/paie/liste_indicateurs_paie',$data);	}	function editer_indicateur_paie($data){		//Verification d'accès au module paie		if(!$this->main_model->isAccessModules('paie')){			redirect(base_url(),'location');			}		// On vérifie si un post est envoyé		if($_POST){			// On appelle la fonction d'edition			$this->indicateurs_model->editerIndicateurPaie($_POST,$this->uri->segment(3));			redirect(base_url().'indicateurs/liste_indicateurs_paie','location');		}		// On check si on a un identifiant en segment 3		if($this->uri->segment(3)!=""){			// On appelle la fonction qui retourne les informations de l'indicateur de paie			$data['infoIndicateurPaie'] = $this->indicateurs_model->infoIndicateurPaie($this->uri->segment(3));		}		$this->load->view('indicateurs/paie/editer_indicateur_paie',$data);	}	function fiche_indicateur_paie($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('paie')){			redirect(base_url(),'location');			}		if($this->uri->segment(3)!=""){			// On appelle la fonction qui retourne les informations de l'indicateur de paie			$data['infoIndicateurPaie'] = $this->indicateurs_model->infoIndicateurPaie($this->uri->segment(3));		}		$this->load->view('indicateurs/paie/fiche_indicateur_paie',$data);	}	function editer_paie_rubrique($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('paie')){			redirect(base_url(),'location');			}		//Si données en post on modifie les rubrique des indicateurs de paie		if($_POST){			$this->indicateurs_model->editerRubriquesIndicateurPaie($this->uri->segment(3),$_POST['listeRubriques']);			redirect(base_url().'indicateurs/fiche_indicateur_paie/'.$this->uri->segment(3),'location');		}		// Liste des indicateurs de paie 		$data['listeRubriquesIndicateurPaie'] = $this->indicateurs_model->listeRubriquesIndicateurPaie($this->uri->segment(3));		// On crée un tableau d'id des indicateurs de paie pour gérer l'affichage des deux listes de sélection		$data['listeRubriquesIndicateurPaieArray']=array();		$data['listeRulesIndicateurPaieArray']=array();		foreach($data['listeRubriquesIndicateurPaie'] as $rubrique){			$nb=count($data['listeRubriquesIndicateurPaieArray']); //iterateur 			$data['listeRubriquesIndicateurPaieArray'][$nb]=$rubrique->CODE_PR_ITEM;			$data['listeRulesIndicateurPaieArray'][$nb]=$rubrique->CODE_PR_RULE;		}		$data['listeRubriquesArray'] = $this->indicateurs_model->listeRubriquesArray();		$data['listeRulesArray'] = $this->indicateurs_model->listeRulesArray();		// Liste de toutes les rubriques		$data['listeRubriques'] = $this->indicateurs_model->listeRubriquesIndicateurPaie();		$data['CODE_INDICATOR'] = $this->uri->segment(3);		$this->load->view('indicateurs/paie/editer_paie_rubrique',$data);	}	function export_paie_rubrique($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('paie')){			redirect(base_url(),'location');			}		// Récupération des informations de la indicateur		$infoIndicateurPaie = $this->indicateurs_model->infoIndicateurPaie($this->uri->segment(3));		// On load le model excel		$this->load->model('excel_model');		// Création du nom du fichier		$file=str_replace(' ','',$infoIndicateurPaie->NAME_INDICATOR).".xls";		// Création du titre du fichier		$titre=$infoIndicateurPaie->NAME_INDICATOR;		// Création du tableau contenant les données		$data['data']=array();		//création de la variable définissant le nombre de ligne en mettant 1 pour l'entête		$data['numRows']=1;		//Nombre de colonne		$data['numCols']=3;		//Préparation entête		$data['data'][0]= array(			$this->lang->line('paie-reglementaire'),			$this->lang->line('paie-rubrique-code'),			$this->lang->line('paie-rubrique-libelle')		);		//Préparation data		foreach($infoIndicateurPaie->listeRubriques as $rub){			//Incrémentation du nombre de ligne			$data['numRows']++;			// Préparation de l'affichage du flag			if($rub->CODE_PR_RULE==NULL){$rule="ND";}else{$rule=$rub->CODE_PR_RULE;}			if($rub->CODE_PR_ITEM==NULL){$cItem="ND";}else{$cItem=$rub->CODE_PR_ITEM;}			if($rub->NAME_PR_ITEM==NULL){$nItem="ND";}else{$nItem=$rub->NAME_PR_ITEM;}			$data['data'][count($data['data'])]= array(				$rule,$cItem,$nItem			);		}		// Appel de la création du fichier excel		$this->excel_model->writeData($file,$titre,$data);			}	/**********************************************************	 *   				Indicateur de mobilite     	   			  *	 **********************************************************/	function liste_indicateurs_mobilite($data){		//Verification d'accès au module indicateurs de paue		if(!$this->main_model->isAccessModules('mobilite')){			redirect(base_url(),'location');			}		if($this->uri->segment(3)=="supprimer_indicateur_mobilite" && is_numeric($this->uri->segment(4))){			$this->indicateurs_model->supprimerIndicateurMobilite($this->uri->segment(4));			redirect(base_url().'indicateurs/liste_indicateurs_mobilite/delok','location');		}		// On appelle la liste des indicateurs de mobilite		$data['listeIndicateursMobilite'] = $this->indicateurs_model->listeIndicateursMobilite();		// On check les messages pour les notification : indicateur bien supprimé		if($this->uri->segment(3)!=""){			$data['msg']=$this->uri->segment(3);		}		$this->load->view('indicateurs/mobilite/liste_indicateurs_mobilite',$data);	}	function editer_indicateur_mobilite($data){		//Verification d'accès au module mobilite		if(!$this->main_model->isAccessModules('mobilite')){			redirect(base_url(),'location');			}		// On vérifie si un post est envoyé		if($_POST){			// On appelle la fonction d'edition			$this->indicateurs_model->editerIndicateurMobilite($_POST,$this->uri->segment(3));			redirect(base_url().'indicateurs/liste_indicateurs_mobilite','location');		}		// On check si on a un identifiant en segment 3		if($this->uri->segment(3)!=""){			// On appelle la fonction qui retourne les informations de l'indicateur de mobilite			$data['infoIndicateurMobilite'] = $this->indicateurs_model->infoIndicateurMobilite($this->uri->segment(3));			$data['targetArray'] = $this->indicateurs_model->listeIndicateursMobiliteTargetArray($data['infoIndicateurMobilite']->CODE_INDICATOR);		}else{			$data['targetArray'] = $this->indicateurs_model->listeIndicateursMobiliteTargetArray();		}		$this->load->model('referentiels_model');		$data['listeDomains'] = $this->referentiels_model->listeDomains();		$this->load->view('indicateurs/mobilite/editer_indicateur_mobilite',$data);	}	function fiche_indicateur_mobilite($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('mobilite')){			redirect(base_url(),'location');			}		if($this->uri->segment(4)=="supprimer_indicateur_mobilite"){			$this->indicateurs_model->supprimerIndicateurMobiliteRubrique($this->uri->segment(3),$this->uri->segment(5));			redirect(base_url()."indicateurs/fiche_indicateur_mobilite/".$this->uri->segment(3)."/delok",'location');		}else{			$data['msg']=$this->uri->segment(4);		}		if($this->uri->segment(3)!=""){			// On appelle la fonction qui retourne les informations de l'indicateur de mobilite			$data['infoIndicateurMobilite'] = $this->indicateurs_model->infoIndicateurMobilite($this->uri->segment(3));		}		$data['listeAttributesArray'] = $this->indicateurs_model->listeAttributesArray();				$this->load->view('indicateurs/mobilite/fiche_indicateur_mobilite',$data);	}	function editer_mobilite_rubrique($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('mobilite')){			redirect(base_url(),'location');			}		$data['infoIndicateurMobilite'] = $this->indicateurs_model->infoIndicateurMobilite($this->uri->segment(3));		//Si données en post on modifie les rubrique des indicateurs de mobilite		if($_POST){			if($this->uri->segment(4)){				$MOD_FIELD=$this->uri->segment(4);			}else{				$MOD_FIELD="";			}			$this->indicateurs_model->editerRubriquesIndicateurMobilite($_POST,$this->uri->segment(3),$MOD_FIELD);			redirect(base_url()."indicateurs/fiche_indicateur_mobilite/".$this->uri->segment(3),'location');		}		if($this->uri->segment(4)){			$data['infoIndicateurMobiliteRubrique'] = $this->indicateurs_model->infoIndicateurMobiliteRubrique($this->uri->segment(3),$this->uri->segment(4));		}		// Liste de toutes les rubriques;		$data['CODE_INDICATOR'] = $this->uri->segment(3);		$this->load->model('referentiels_model');		$data['listeAttributes'] = $this->indicateurs_model->listeAttributes($data['infoIndicateurMobilite']->CODE_DOMAIN);		$data['listeAttributesField'] = $this->indicateurs_model->listeAttributes($data['infoIndicateurMobilite']->CODE_DOMAIN,"tkh");		$data['listeModField']  = array();		// Mise en place de la liste des attributs déja utilise		if(count($data['infoIndicateurMobilite']->listeRubriques)>0){			foreach($data['infoIndicateurMobilite']->listeRubriques as $rub){				$data['listeModField'][count($data['listeModField'])] = $rub->MOD_FIELD;			}		}		$this->load->view('indicateurs/mobilite/editer_mobilite_rubrique',$data);	}	function export_mobilite_rubrique($data){		//Verification d'accès au module indicateurs		if(!$this->main_model->isAccessModules('mobilite')){			redirect(base_url(),'location');			}		// Récupération des informations de la indicateur		$infoIndicateurMobilite = $this->indicateurs_model->infoIndicateurMobilite($this->uri->segment(3));		// On load le model excel		$this->load->model('excel_model');		// Création du nom du fichier		$file=str_replace(' ','',$infoIndicateurMobilite->NAME_INDICATOR).".xls";		// Création du titre du fichier		$titre=$infoIndicateurMobilite->NAME_INDICATOR;		// Création du tableau contenant les données		$data['data']=array();		//création de la variable définissant le nombre de ligne en mettant 1 pour l'entête		$data['numRows']=1;		//Nombre de colonne		$data['numCols']=3;		//Préparation entête		$data['data'][0]= array(			$this->lang->line('mobilite-rubrique-attribut'),			$this->lang->line('mobilite-rubrique-dico'),			$this->lang->line('mobilite-rubrique-ope')		);		$this->load->model('referentiels_model');		$listeAttributesArray = $this->indicateurs_model->listeAttributesArray();		//Préparation data		foreach($infoIndicateurMobilite->listeRubriques as $rub){			//Incrémentation du nombre de ligne			$data['numRows']++;			// Préparation de l'affichage du flag			if($rub->CODE_PR_RULE==NULL){$rule="ND";}else{$rule=$rub->CODE_PR_RULE;}			if($rub->CODE_PR_ITEM==NULL){$cItem="ND";}else{$cItem=$rub->CODE_PR_ITEM;}			if($rub->NAME_PR_ITEM==NULL){$nItem="ND";}else{$nItem=$rub->NAME_PR_ITEM;}			$data['data'][count($data['data'])]= array(				$listeAttributesArray[$rub->CODE_ATTRIBUTE]->NAME_ATTRIBUTE,$rub->MOD_FIELD,$rub->OPERATOR			);		}		// Appel de la création du fichier excel		$this->excel_model->writeData($file,$titre,$data);			}		/**********************************************************	 *   									       Ancienneté		    	 		                	 *	 **********************************************************/		function liste_anciennetes($data){		// Vérification droit user sur le module		if(!$this->main_model->isAccessModules('anciennete')){			redirect(base_url(),'location');		}		// On appelle la liste des anciennetes		$data['listeAnciennetes'] = $this->indicateurs_model->listeAnciennetes();		// On check les messages pour les notification : champ bien supprimé		if($this->uri->segment(3)!=""){			$data['msg']=$this->uri->segment(3);		}				//On stock dans une variable la liste de tous les Attributes 		$data['listeAttributesArray'] = $this->indicateurs_model->listeAttributesArray(); 				//On stock dans une variable la liste de tous les Domaines		$this->load->model('referentiels_model');		$data['listeDomainsArray'] = $this->referentiels_model->listeDomainsArray();				//On stock dans une variable la liste des Anciennetés 		$data['listeAnciennetes'] = $this->indicateurs_model->listeAnciennetes();				$this->load->view('indicateurs/anciennete/liste_anciennetes',$data);	}		function editer_anciennete($data){		if(!$this->main_model->isAccessModules('anciennete')){			redirect(base_url(),'location');		}		// On vérifie si un post est envoyé		if($_POST){			// On appelle la fonction d'edition			$this->indicateurs_model->editerAnciennete($_POST);			redirect(base_url().'indicateurs/liste_anciennetes','location');		}		// On check si on a un identifiant en segment 3		if($this->uri->segment(3)!=""){			// On appelle la fonction qui retourne les informations du champ			$data['infoAnciennete'] = $this->indicateurs_model->infoAnciennete($this->uri->segment(3));		}		//On stock dans une variable la liste des Attributes		$data['listeAttributes'] = $this->indicateurs_model->listeAttributes();				//On stock dans une variable la liste de tous les Domaines		$this->load->model('referentiels_model');		$data['listeDomainsArray'] = $this->referentiels_model->listeDomainsArray();				//On stock dans une variable la liste des Anciennetés		$data['listeAnciennetes'] = $this->indicateurs_model->listeAnciennetes();		$this->load->view('indicateurs/anciennete/editer_anciennete',$data);	}		function supprimer_anciennete($data){		if(!$this->main_model->isAccessModules('anciennete')){			redirect(base_url(),'location');		}		// On supprime l'utilisateur		$this->indicateurs_model->supprimerAnciennete($this->uri->segment(3));		// On redirige sur la liste avec un segment delok		redirect(base_url().'indicateurs/liste_anciennetes/delok','location');	}		function check_name_anciennete($data){		if(!$this->main_model->isAccessModules('anciennete')){			redirect(base_url(),'location');		}		// On supprime l'utilisateur		$data['SEN_CODE'] = $this->uri->segment(3);		echo $this->indicateurs_model->checkNameAnciennete($_POST['SEN_NAME'],$this->uri->segment(3));	}}/* End of file welcome.php *//* Location: ./application/controllers/welcome.php */